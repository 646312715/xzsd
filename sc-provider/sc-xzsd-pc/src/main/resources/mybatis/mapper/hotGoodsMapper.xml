<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.hotGoods.dao.HotGoodsDao">

    <!--新增热门商品-->
    <insert id="addHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        insert into t_info_hot_goods
        (hot_goods_id,
        hot_goods_num,
        goods_id,
        is_delete,
        create_time,
        create_user,
        update_time,
        update_user,
        version
        ) values (
          #{hotGoodsId},
          #{hotGoodsNum},
          #{goodsId},
          #{isDelete},
          now(),
          #{createUser},
          now(),
          #{updateUser},
          #{version}
        );
    </insert>
    <!--热门商品查重-->
    <select id="getGoodsCount" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo" resultType="int">
        select
        IF((select count(hot_goods_num)
        from t_info_hot_goods
        where is_delete = 0
        and hot_goods_num = #{hotGoodsNum}
        <if test="hotGoodsId != null and hotGoodsId != ''">
            and hot_goods_id != #{hotGoodsId}
        </if>)!=0,1,0)
        +
        IF((select count(goods_id)
        from t_info_hot_goods
        where is_delete = 0
        and goods_id = #{goodsId}
        <if test="hotGoodsId != null and hotGoodsId != ''">
            and hot_goods_id != #{hotGoodsId}
        </if>)!=0,2,0)

    </select>
    <!--查询热门商品详情-->
    <select id="getHotGoods" parameterType="java.lang.String" resultType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
      select
      hot_goods_num hotGoodsNum,
      h.goods_id goodsId,
      goods_name goodsName,
      hot_goods_id hotGoodsId,
      h.version
      from t_info_hot_goods h
      left join t_info_goods g
      on h.goods_id = g.goods_id
      where hot_goods_id = #{hotGoodsId}
    </select>
    <!--分页查询热门商品-->
    <select id="listHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo" resultType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        select hot_goods_num hotGoodsNum,
        h.goods_id goodsId,
        goods_name goodsName,
        goods_price goodsPrice,
        goods_describe goodsDescribe,
        hot_goods_id hotGoodsId,
        h.version
        from t_info_hot_goods h
        left join t_info_goods g
        on h.goods_id = g.goods_id
        where
        h.is_delete = 0
        <if test="goodsName != null and goodsName != ''">
            and goods_name like concat('%', #{goodsName}, '%')
        </if>
        <if test="goodsId != null and goodsId != ''">
            and h.goods_id like concat('%', #{goodsId}, '%')
        </if>
    </select>
    <!--修改热门商品-->
    <update id="updateHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        update t_info_hot_goods
        set  goods_id = #{goodsId},
        hot_goods_num = #{hotGoodsNum},
        update_time = now(),
        update_user = #{updateUser},
        version = version + 1
        where hot_goods_id = #{hotGoodsId}
        and version = #{version}
    </update>
    <!--查询热门商品展示数量接口-->
    <select id="getHotGoodsShowNum" resultType="com.xzsd.pc.hotGoods.entity.GoodsShowNumInfo">
        select dict_value hotGoodsShowNum,
        version
        from t_sys_dictionary
        where
        is_delete = 0
        and id = '1'
    </select>
    <!--修改热门商品数量展示接口-->
    <update id="updateHotGoodsShowNum" parameterType="com.xzsd.pc.hotGoods.entity.GoodsShowNumInfo">
        update t_sys_dictionary
        set dict_value = #{hotGoodsShowNum},
        update_user = #{updateUser},
        update_time = now(),
        version = version + 1
        where id = '1'
        and version = #{version}
    </update>
    <!--删除热门商品-->
    <update id="deleteHotGoods" parameterType="java.lang.String">
        update t_info_hot_goods
        set is_delete = 1,
         update_user = #{loginId},
         update_time = now()
         where hot_goods_id in
        <foreach item="item" index="index" collection="hotGoodsId" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>