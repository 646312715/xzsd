<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.goods.dao.GoodsDao">
    <!--新增商品-->
    <insert id="addGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        insert into
        t_info_goods (
        goods_id,
        isbn,
        goods_name,
        goods_original_cost,
        goods_price,
        goods_inventory,
        one_classify_id,
        two_classify_id,
        goods_advertise,
        goods_describe,
        supplier_name,
        goods_image_path,
        goods_author,
        goods_press,
        goods_views_num,
        goods_sales,
        is_delete,
        create_user,
        create_time,
        update_user,
        update_time,
        version
        ) values (
        #{goodsId},
        #{isbn},
        #{goodsName},
        #{goodsOriginalCost},
        #{goodsPrice},
        #{goodsInventory},
        #{oneClassifyId},
        #{twoClassifyId},
        #{goodsAdvertise},
        #{goodsDescribe},
        #{supplierName},
        #{goodsImagePath},
        #{goodsAuthor},
        #{goodsPress},
        0,
        0,
        #{isDelete},
        #{createUser},
        now(),
        #{updateUser},
        now(),
        #{version}
        );
    </insert>
    <!--修改商品-->
    <update id="updateGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        update t_info_goods set
        isbn = #{isbn},
        goods_name = #{goodsName},
        goods_original_cost = #{goodsOriginalCost},
        goods_price = #{goodsPrice},
        goods_inventory = #{goodsInventory},
        one_classify_id = #{oneClassifyId},
        two_classify_id = #{twoClassifyId},
        goods_advertise = #{goodsAdvertise},
        goods_describe = #{goodsDescribe},
        supplier_name = #{supplierName},
        goods_image_path = #{goodsImagePath},
        goods_author = #{goodsAuthor},
        goods_press = #{goodsPress},
        update_user = #{updateUser},
        update_time = now(),
        version = version + 1
        where
        goods_id = #{goodsId}
        and
        is_delete = 0
        and
        version = #{version}
    </update>
    <!--查询商品详情-->
    <select id="getGoods" parameterType="java.lang.String" resultType="com.xzsd.pc.goods.entity.GoodsInfo">
        select
        goods_id goodsId,
        isbn,
        goods_name goodsName,
        goods_original_cost goodsOriginalCost,
        goods_price goodsPrice,
        goods_inventory goodsInventory,
        g.one_classify_id oneClassifyId,
        g.two_classify_id twoClassifyId,
        c1.classify_name oneClassifyName,
        c2.classify_name twoClassifyName,
        goods_advertise goodsAdvertise,
        goods_describe goodsDescribe,
        supplier_name supplierName,
        goods_author goodsAuthor,
        goods_press goodsPress,
        g.version
        from
        t_info_goods g
        left join t_info_goods_classify c1
        on c1.classify_id = g.one_classify_id
        left join t_info_goods_classify c2
        on c2.classify_id = g.two_classify_id
        where
        goods_id = #{goodsId}
        and
        g.is_delete = 0;
    </select>
    <!--查询商品名称数量-->
    <select id="findGoodCount" parameterType="com.xzsd.pc.goods.entity.GoodsInfo" resultType="int">
        select
        count(*)
        from
        t_info_goods
        where
        is_delete = 0
        and
        isbn = #{isbn}
        <if test="goodsId != null and goodsId != ''">
            and goods_id != #{goodsId}
        </if>
    </select>
    <!--查询商品分页列表-->
    <select id="listGoods" resultType="com.xzsd.pc.goods.entity.GoodsInfo" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        select
        goods_name goodsName,
        goods_original_cost goodsOriginalCost,
        goods_price goodsPrice,
        goods_sales goodsSales,
        g.one_classify_id oneClassifyId,
        g.two_classify_id twoClassifyId,
        c1.classify_name oneClassifyName,
        c2.classify_name twoClassifyName,
        goods_advertise goodsAdvertise,
        goods_describe goodsDescribe,
        goods_state_id goodsStateId,
        goods_shelf_time goodsShelfTime,
        goods_views_num goodsViewsNum,
        supplier_name supplierName,
        goods_image_path goodsImagePath,
        goods_inventory goodsInventory,
        isbn,
        goods_id goodsId,
        g.version
        from
          t_info_goods g
          left join t_info_goods_classify c1
          on c1.classify_id = g.one_classify_id
          left join t_info_goods_classify c2
          on c2.classify_id = g.two_classify_id
        where
          g.is_delete = 0
        <if test="goodsName != null and goodsName != ''">
            and goods_name like concat('%', #{goodsName}, '%')
        </if>
        <if test="goodsStateId != null and goodsStateId != ''">
            and goods_state_id = #{goodsStateId}
        </if>
        <if test="goodsAdvertise != null and goodsAdvertise != ''">
            and goods_advertise like concat('%', #{goodsAdvertise}, '%')
        </if>
        <if test="goodsPress != null and goodsPress != ''">
            and goods_press like concat('%', #{goodsPress}, '%')
        </if>
        <if test="goodsAuthor != null and goodsAuthor != ''">
            and goods_author like concat('%', #{goodsAuthor}, '%')
        </if>
        order by g.create_time desc
    </select>
    <!--删除商品-->
    <update id="deleteGoods" parameterType="java.lang.String">
        update t_info_goods
        set
        is_delete = 1,
        update_user = #{userId},
        update_time = now()
        where goods_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!--商品状态修改-->
    <update id="updateGoodsShelfState" parameterType="java.util.List">
        <foreach item="goodsInfos" index="index" collection="list">
            update t_info_goods
            set
            goods_state_id = #{goodsInfos.goodsStateId},
            <if test="goodsInfos.goodsStateId == 1">
            goods_shelf_time = now(),
            </if>
            <if test="goodsInfos.goodsStateId != 1">
            goods_shelf_time = null,
            </if>
            version = version + 1,
            update_user = #{goodsInfos.updateUser},
            update_time = now()
            where
            goods_id = #{goodsInfos.goodsId}
            and
            is_delete = 0
            and
            version = #{goodsInfos.version};
        </foreach>
    </update>
    <!--查询轮播图和热门商品是否有该商品-->
    <select id="checkGoods" resultType="int">
        select
        IF((select
        count(*)
        from t_info_goods
        left join t_info_hot_goods
        on t_info_goods.goods_id = t_info_hot_goods.goods_id
        where t_info_hot_goods.goods_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
        )!=0,1,0)
        +
        IF((select
        count(*)
        from t_info_goods
        left join t_info_slideshow_home
        on t_info_goods.goods_id = t_info_slideshow_home.goods_id
        where t_info_slideshow_home.goods_id in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>)!=0,2,0)
    </select>
    <!--查询商品分类下拉框-->
    <select id="listGoodsClassify" parameterType="java.lang.String" resultType="com.xzsd.pc.goodsClassify.entity.GoodsClassifyInfo">
        select classify_id,
        classify_name
        from t_info_goods_classify
        where classify_parent = #{classifyId}
    </select>
</mapper>